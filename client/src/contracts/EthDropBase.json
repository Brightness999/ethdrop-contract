{
  "contractName": "EthDropBase",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "newContract",
          "type": "address"
        }
      ],
      "name": "ContractUpgrade",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "EventClose",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "RegistrationOpen",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "WinningsClaimingOpen",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ceoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cfoAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cooAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCEO",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCFO",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isCOO",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCEO",
          "type": "address"
        }
      ],
      "name": "setCEO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCFO",
          "type": "address"
        }
      ],
      "name": "setCFO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newCOO",
          "type": "address"
        }
      ],
      "name": "setCOO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newContract\",\"type\":\"address\"}],\"name\":\"ContractUpgrade\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EventClose\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"RegistrationOpen\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"WinningsClaimingOpen\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ceoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cfoAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cooAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCEO\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCFO\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCOO\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCEO\",\"type\":\"address\"}],\"name\":\"setCEO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCFO\",\"type\":\"address\"}],\"name\":\"setCFO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCOO\",\"type\":\"address\"}],\"name\":\"setCOO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EventClose()\":{\"details\":\"The EventClose event is fired whenever an event closes. After this event is fired users can no\"},\"RegistrationOpen()\":{\"details\":\"The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\"},\"Transfer(address,address)\":{\"details\":\"Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred\"},\"WinningsClaimingOpen()\":{\"details\":\"The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\"}},\"kind\":\"dev\",\"methods\":{\"pause()\":{\"details\":\"Called by any \\\"C-level\\\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage.\"},\"setCEO(address)\":{\"details\":\"Assigns a new address to act as the CEO. Only available to the current CEO.\",\"params\":{\"_newCEO\":\"The address of the new CEO\"}},\"setCFO(address)\":{\"details\":\"Assigns a new address to act as the CFO. Only available to the current CEO.\",\"params\":{\"_newCFO\":\"The address of the new CFO\"}},\"setCOO(address)\":{\"details\":\"Assigns a new address to act as the COO. Only available to the current CEO.\",\"params\":{\"_newCOO\":\"The address of the new COO\"}},\"unpause()\":{\"details\":\"Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"unpause()\":{\"notice\":\"This is public rather than external so it can be called by  derived contracts.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/core/EthDropBase.sol\":\"EthDropBase\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/finance/PaymentSplitter.sol\":{\"keccak256\":\"0x5b5c64239a7980f0c2c5baa584a3350912c7260db32f6d6544a2755f59a0c488\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ce18d9dd07538250504704e46450f4dbfe80808e677f9a0849cdd07bbaac225\",\"dweb:/ipfs/QmSCWBWkVbgJHLiyAUZex6iqJcYPy5GL4coa2ysewyxF8Q\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3b4820cac4f127869f6eb496c1d74fa6ac86ed24071e0f94742e6aef20e7252c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23e1c7303c30a2ef9c9b3f861cda15c78e4c9697b4a7988f2bf7b21c392a02fb\",\"dweb:/ipfs/QmWQJh5MsXJZjSTzAs9n5gtrqWYgXwkBa6xfwD5KKGQgSC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/core/EthDropBase.sol\":{\"keccak256\":\"0x4b26940ae1e1979063a733340121d57383b6e190a22ebd7cfed6640a60a1b33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81bdbd31442c5eb0ffd60cd037ee7f694abccfd5a7dcc386c45ca31c3a555226\",\"dweb:/ipfs/QmRNK5Do1RGkkFDP7ksRCEQLqUXhtRF2RS6RWbeHXQA5F1\"]},\"project:/contracts/roles/ExecutivesAccessControl.sol\":{\"keccak256\":\"0xcc37a9b2b3a9f27a4ba28dbb259d032785857688fb027c5b0173fbe653c2b381\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7a9d08dc5f90f182e78aaf0cd9da0d465369bfcba66e4c8757a8f756e20a32e\",\"dweb:/ipfs/QmaNShWgFootiA2kZWWLh2JhN5nSHLU4Bqazwr1HEM2JwU\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600260146101000a81548160ff021916908315150217905550600560035534801561003057600080fd5b506108f1806100406000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80635c975abb116100715780635c975abb146101535780638456cb59146101715780639393ae371461017b578063b047fb5014610199578063e513b7a9146101b7578063f4a02e70146101d5576100b4565b80630519ce79146100b95780630a0f8168146100d757806327d7874c146100f55780632ba73c15146101115780633f4ba83a1461012d5780634e0a337914610137575b600080fd5b6100c16101f3565b6040516100ce919061082b565b60405180910390f35b6100df610219565b6040516100ec919061082b565b60405180910390f35b61010f600480360381019061010a91906107e0565b61023d565b005b61012b600480360381019061012691906107e0565b610312565b005b6101356103e8565b005b610151600480360381019061014c91906107e0565b610476565b005b61015b61054c565b6040516101689190610846565b60405180910390f35b61017961055f565b005b61018361069e565b6040516101909190610846565b60405180910390f35b6101a16106f6565b6040516101ae919061082b565b60405180910390f35b6101bf61071c565b6040516101cc9190610846565b60405180910390f35b6101dd610773565b6040516101ea9190610846565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102cf57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a457600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044057600080fd5b600260149054906101000a900460ff1661045957600080fd5b6000600260146101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610606575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061065e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61066757600080fd5b600260149054906101000a900460ff161561068157600080fd5b6001600260146101000a81548160ff021916908315150217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000813590506107da816108a4565b92915050565b6000602082840312156107f6576107f561089f565b5b6000610804848285016107cb565b91505092915050565b61081681610861565b82525050565b61082581610873565b82525050565b6000602082019050610840600083018461080d565b92915050565b600060208201905061085b600083018461081c565b92915050565b600061086c8261087f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6108ad81610861565b81146108b857600080fd5b5056fea2646970667358221220d8856d026977f1df15f266f16c5a480d880906d1e329fd85b10c3cd74ee3c2de64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80635c975abb116100715780635c975abb146101535780638456cb59146101715780639393ae371461017b578063b047fb5014610199578063e513b7a9146101b7578063f4a02e70146101d5576100b4565b80630519ce79146100b95780630a0f8168146100d757806327d7874c146100f55780632ba73c15146101115780633f4ba83a1461012d5780634e0a337914610137575b600080fd5b6100c16101f3565b6040516100ce919061082b565b60405180910390f35b6100df610219565b6040516100ec919061082b565b60405180910390f35b61010f600480360381019061010a91906107e0565b61023d565b005b61012b600480360381019061012691906107e0565b610312565b005b6101356103e8565b005b610151600480360381019061014c91906107e0565b610476565b005b61015b61054c565b6040516101689190610846565b60405180910390f35b61017961055f565b005b61018361069e565b6040516101909190610846565b60405180910390f35b6101a16106f6565b6040516101ae919061082b565b60405180910390f35b6101bf61071c565b6040516101cc9190610846565b60405180910390f35b6101dd610773565b6040516101ea9190610846565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461029557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102cf57600080fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103a457600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461044057600080fd5b600260149054906101000a900460ff1661045957600080fd5b6000600260146101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104ce57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561050857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260149054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610606575060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061065e5750600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b61066757600080fd5b600260149054906101000a900460ff161561068157600080fd5b6001600260146101000a81548160ff021916908315150217905550565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6000813590506107da816108a4565b92915050565b6000602082840312156107f6576107f561089f565b5b6000610804848285016107cb565b91505092915050565b61081681610861565b82525050565b61082581610873565b82525050565b6000602082019050610840600083018461080d565b92915050565b600060208201905061085b600083018461081c565b92915050565b600061086c8261087f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6108ad81610861565b81146108b857600080fd5b5056fea2646970667358221220d8856d026977f1df15f266f16c5a480d880906d1e329fd85b10c3cd74ee3c2de64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1952:12",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:12"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:12"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:12",
                "type": ""
              }
            ],
            "src": "7:139:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "218:263:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:83:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "266:77:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:79:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:79:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "239:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "248:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "260:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "231:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "231:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "228:2:12"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "357:117:12",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "372:15:12",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "386:1:12",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "376:6:12",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "401:63:12",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "436:9:12"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "447:6:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "432:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "432:22:12"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "456:7:12"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "411:20:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:53:12"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "401:6:12"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "188:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "199:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "211:6:12",
                "type": ""
              }
            ],
            "src": "152:329:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "552:53:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "569:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "592:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "574:17:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "574:24:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:37:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:37:12"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "540:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "547:3:12",
                "type": ""
              }
            ],
            "src": "487:118:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "670:50:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "687:3:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "707:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "692:14:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "692:21:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "680:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "680:34:12"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "658:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "665:3:12",
                "type": ""
              }
            ],
            "src": "611:109:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "824:124:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "834:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "846:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "842:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "834:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "914:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "927:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "938:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "923:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "923:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "870:43:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "870:71:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "870:71:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "796:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "808:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "819:4:12",
                "type": ""
              }
            ],
            "src": "726:222:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1046:118:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1056:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1068:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1079:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1064:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1064:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1056:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1130:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1143:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1154:1:12",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1139:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1139:17:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1092:37:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1092:65:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1092:65:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1018:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1030:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1041:4:12",
                "type": ""
              }
            ],
            "src": "954:210:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1210:35:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1220:19:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1236:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1230:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1230:9:12"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1220:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1203:6:12",
                "type": ""
              }
            ],
            "src": "1170:75:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1296:51:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1306:35:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1335:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1317:17:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1317:24:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1306:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1278:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1288:7:12",
                "type": ""
              }
            ],
            "src": "1251:96:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1395:48:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1405:32:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1430:5:12"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1423:6:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1423:13:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1416:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:21:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1405:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1377:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1387:7:12",
                "type": ""
              }
            ],
            "src": "1353:90:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1494:81:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1504:65:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1519:5:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1526:42:12",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1515:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1515:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1504:7:12"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1476:5:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1486:7:12",
                "type": ""
              }
            ],
            "src": "1449:126:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1670:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1687:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1690:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1680:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1680:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1680:12:12"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1581:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1793:28:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1810:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1813:1:12",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1803:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1803:12:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1803:12:12"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1704:117:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1870:79:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1927:16:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1936:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1939:1:12",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1929:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1929:12:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1929:12:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1893:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1918:5:12"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1900:17:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1900:24:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1890:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1890:35:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1883:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:43:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1880:2:12"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1863:5:12",
                "type": ""
              }
            ],
            "src": "1827:122:12"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "167:3496:6:-:0;;;1708:5:10;1687:26;;;;;;;;;;;;;;;;;;;;1747:1:6;1723:25;;167:3496;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "167:3496:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1524:25:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1493;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2579:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4321:126;;;:::i;:::-;;2947:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1687:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3952:81;;;:::i;:::-;;2713:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1555:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2345:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3081;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1524:25;;;;;;;;;;;;;:::o;1493:::-;;;;;;;;;;;;:::o;2579:128::-;1827:10;;;;;;;;;;1813:24;;:10;:24;;;1805:33;;;;;;2666:1:::1;2647:21;;:7;:21;;;;2639:30;;;::::0;::::1;;2693:7;2680:10;::::0;:20:::1;;;;;;;;;;;;;;;;;;2579:128:::0;:::o;3315:::-;1827:10;;;;;;;;;;1813:24;;:10;:24;;;1805:33;;;;;;3402:1:::1;3383:21;;:7;:21;;;;3375:30;;;::::0;::::1;;3429:7;3416:10;;:20;;;;;;;;;;;;;;;;;;3315:128:::0;:::o;4321:126::-;1827:10;;;;;;;;;;1813:24;;:10;:24;;;1805:33;;;;;;3774:6:::1;;;;;;;;;;;3766:15;;;::::0;::::1;;4435:5:::2;4426:6;;:14;;;;;;;;;;;;;;;;;;4321:126::o:0;2947:128::-;1827:10;;;;;;;;;;1813:24;;:10;:24;;;1805:33;;;;;;3034:1:::1;3015:21;;:7;:21;;;;3007:30;;;::::0;::::1;;3061:7;3048:10;;:20;;;;;;;;;;;;;;;;;;2947:128:::0;:::o;1687:26::-;;;;;;;;;;;;;:::o;3952:81::-;2213:10;;;;;;;;;;;2199:24;;:10;:24;;;:68;;;;2257:10;;;;;;;;;;2243:24;;:10;:24;;;2199:68;:112;;;;2301:10;;;;;;;;;;;2287:24;;:10;:24;;;2199:112;2178:143;;;;;;3633:6:::1;;;;;;;;;;;3632:7;3624:16;;;::::0;::::1;;4022:4:::2;4013:6;;:13;;;;;;;;;;;;;;;;;;3952:81::o:0;2713:89::-;2748:4;2785:10;;;;;;;;;;;2771:24;;:10;:24;;;2764:31;;2713:89;:::o;1555:25::-;;;;;;;;;;;;;:::o;2345:89::-;2380:4;2417:10;;;;;;;;;;;2403:24;;:10;:24;;;2396:31;;2345:89;:::o;3081:::-;3116:4;3153:10;;;;;;;;;;;3139:24;;:10;:24;;;3132:31;;3081:89;:::o;7:139:12:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:2;;;266:79;;:::i;:::-;228:2;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;218:263;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;552:53;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;670:50;;:::o;726:222::-;819:4;857:2;846:9;842:18;834:26;;870:71;938:1;927:9;923:17;914:6;870:71;:::i;:::-;824:124;;;;:::o;954:210::-;1041:4;1079:2;1068:9;1064:18;1056:26;;1092:65;1154:1;1143:9;1139:17;1130:6;1092:65;:::i;:::-;1046:118;;;;:::o;1251:96::-;1288:7;1317:24;1335:5;1317:24;:::i;:::-;1306:35;;1296:51;;;:::o;1353:90::-;1387:7;1430:5;1423:13;1416:21;1405:32;;1395:48;;;:::o;1449:126::-;1486:7;1526:42;1519:5;1515:54;1504:65;;1494:81;;;:::o;1704:117::-;1813:1;1810;1803:12;1827:122;1900:24;1918:5;1900:24;:::i;:::-;1893:5;1890:35;1880:2;;1939:1;1936;1929:12;1880:2;1870:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../roles/ExecutivesAccessControl.sol\";\nimport \"@openzeppelin/contracts/finance/PaymentSplitter.sol\";\n\ncontract EthDropBase is ExecutivesAccessControl {\n    /*** EVENTS ***/\n\n    /// @dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\n    event RegistrationOpen();\n\n    /// @dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering.\n    //    After this event fires users can no longer register, and users who have registered can claim winnings.\n    event WinningsClaimingOpen();\n\n    /// @dev The EventClose event is fired whenever an event closes. After this event is fired users can no\n    //    longer claim winnings\n    event EventClose();\n\n    /// @dev Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred\n\n    event Transfer(address from, address to); // Assumed Eth\n\n    // TODO - (in later, more than just eth contracts as pass tokenId)\n    // event Transfer(address from, address to, uint tokenId);\n\n    /*** DATA TYPES ***/\n\n    /// @dev The main Kitty struct. Every cat in CryptoKitties is represented by a copy\n    ///  of this structure, so great care was taken to ensure that it fits neatly into\n    ///  exactly two 256-bit words. Note that the order of the members in this structure\n    ///  is important because of the byte-packing rules used by Ethereum.\n    ///  Ref: http://solidity.readthedocs.io/en/develop/miscellaneous.html\n\n    // TODO - ^ think harder about all that byte-packing junk... 😅\n\n    enum EventState {\n        CREATED,\n        REGISTRATION,\n        CLAIM_WINNINGS,\n        ENDED\n    }\n\n    uint devCutPercentage = 5;\n\n    struct EthDropEvent {\n        // The IRL organization that controls their own airdrops.\n        // Each group can only be running 1 event at a time.\n        uint groupId;\n        // Event goes through a linear flow of states, finite state machine.\n        EventState currentState;\n        // The timestamp from the block when this event started.\n        uint startTime;\n        // The timestamp from the block when registration for this event ended.\n        uint registrationEndTime;\n        // The timestamp from the block when this event ended.\n        uint endTime;\n        // The number of eligibleRecipients who have registered.\n        uint registeredRecipientsCount;\n        // Data about the sponsor info (address is stored in Roles)\n        string sponsorName;\n        string sponsorImageUrl;\n        string sponsorLinkToUrl;\n        address currentContributor;\n    }\n\n    // ALL events happening now or in the future.\n    // Key is the groupId\n    mapping(uint => EthDropEvent) currentEvents;\n\n    // ALL events that have already happened.\n    // Key is the groupId\n    mapping(uint => EthDropEvent[]) pastEvents;\n\n    // Holds ALL admins for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) admins;\n\n    // Holds ALL contributors for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) contributors;\n\n    // Holds ALL eligibleRecipients for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) eligibleRecipients;\n\n    // Holds ALL registeredRecipients for all groups\n    // groupId => Role\n    mapping(uint => mapping(address => bool)) registeredRecipients;\n\n    // Holds ALL registeredRecipients in an array (for PaymentSplitter)\n    // groupId => address[]\n    mapping(uint => address[]) registeredRecipientsArray;\n\n    // Keeping track of winnings for all groups\n    mapping(uint => PaymentSplitter) pot;\n\n}",
  "sourcePath": "/Users/jlynch/Git-Projects/EthDrop/contracts/core/EthDropBase.sol",
  "ast": {
    "absolutePath": "project:/contracts/core/EthDropBase.sol",
    "exportedSymbols": {
      "Address": [
        590
      ],
      "Context": [
        611
      ],
      "EthDropBase": [
        1081
      ],
      "ExecutivesAccessControl": [
        2036
      ],
      "PaymentSplitter": [
        294
      ],
      "SafeMath": [
        923
      ]
    },
    "id": 1082,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 985,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "project:/contracts/roles/ExecutivesAccessControl.sol",
        "file": "../roles/ExecutivesAccessControl.sol",
        "id": 986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1082,
        "sourceUnit": 2037,
        "src": "57:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "file": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "id": 987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1082,
        "sourceUnit": 295,
        "src": "104:61:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 988,
              "name": "ExecutivesAccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2036,
              "src": "191:23:6"
            },
            "id": 989,
            "nodeType": "InheritanceSpecifier",
            "src": "191:23:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1081,
        "linearizedBaseContracts": [
          1081,
          2036
        ],
        "name": "EthDropBase",
        "nameLocation": "176:11:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "243:103:6",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 992,
            "name": "RegistrationOpen",
            "nameLocation": "357:16:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:6"
            },
            "src": "351:25:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 993,
              "nodeType": "StructuredDocumentation",
              "src": "382:103:6",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 995,
            "name": "WinningsClaimingOpen",
            "nameLocation": "609:20:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:2:6"
            },
            "src": "603:29:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 996,
              "nodeType": "StructuredDocumentation",
              "src": "638:103:6",
              "text": "@dev The EventClose event is fired whenever an event closes. After this event is fired users can no"
            },
            "id": 998,
            "name": "EventClose",
            "nameLocation": "784:10:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:2:6"
            },
            "src": "778:19:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "803:101:6",
              "text": "@dev Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred"
            },
            "id": 1005,
            "name": "Transfer",
            "nameLocation": "915:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1001,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "932:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "924:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "946:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "938:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:26:6"
            },
            "src": "909:41:6"
          },
          {
            "canonicalName": "EthDropBase.EventState",
            "id": 1010,
            "members": [
              {
                "id": 1006,
                "name": "CREATED",
                "nameLocation": "1643:7:6",
                "nodeType": "EnumValue",
                "src": "1643:7:6"
              },
              {
                "id": 1007,
                "name": "REGISTRATION",
                "nameLocation": "1660:12:6",
                "nodeType": "EnumValue",
                "src": "1660:12:6"
              },
              {
                "id": 1008,
                "name": "CLAIM_WINNINGS",
                "nameLocation": "1682:14:6",
                "nodeType": "EnumValue",
                "src": "1682:14:6"
              },
              {
                "id": 1009,
                "name": "ENDED",
                "nameLocation": "1706:5:6",
                "nodeType": "EnumValue",
                "src": "1706:5:6"
              }
            ],
            "name": "EventState",
            "nameLocation": "1622:10:6",
            "nodeType": "EnumDefinition",
            "src": "1617:100:6"
          },
          {
            "constant": false,
            "id": 1013,
            "mutability": "mutable",
            "name": "devCutPercentage",
            "nameLocation": "1728:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "1723:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1011,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1723:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 1012,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1747:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "EthDropBase.EthDropEvent",
            "id": 1035,
            "members": [
              {
                "constant": false,
                "id": 1015,
                "mutability": "mutable",
                "name": "groupId",
                "nameLocation": "1917:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "1912:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1014,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1912:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1018,
                "mutability": "mutable",
                "name": "currentState",
                "nameLocation": "2022:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2011:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_EventState_$1010",
                  "typeString": "enum EthDropBase.EventState"
                },
                "typeName": {
                  "id": 1017,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1016,
                    "name": "EventState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1010,
                    "src": "2011:10:6"
                  },
                  "referencedDeclaration": 1010,
                  "src": "2011:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_EventState_$1010",
                    "typeString": "enum EthDropBase.EventState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1020,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "2114:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2109:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1019,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2109:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1022,
                "mutability": "mutable",
                "name": "registrationEndTime",
                "nameLocation": "2218:19:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2213:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1021,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2213:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1024,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "2315:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2310:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1023,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2310:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1026,
                "mutability": "mutable",
                "name": "registeredRecipientsCount",
                "nameLocation": "2402:25:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2397:30:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1025,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2397:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1028,
                "mutability": "mutable",
                "name": "sponsorName",
                "nameLocation": "2512:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2505:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1027,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2505:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1030,
                "mutability": "mutable",
                "name": "sponsorImageUrl",
                "nameLocation": "2540:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2533:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1029,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2533:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1032,
                "mutability": "mutable",
                "name": "sponsorLinkToUrl",
                "nameLocation": "2572:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2565:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1031,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2565:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1034,
                "mutability": "mutable",
                "name": "currentContributor",
                "nameLocation": "2606:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2598:26:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1033,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2598:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "EthDropEvent",
            "nameLocation": "1762:12:6",
            "nodeType": "StructDefinition",
            "scope": 1081,
            "src": "1755:876:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1040,
            "mutability": "mutable",
            "name": "currentEvents",
            "nameLocation": "2743:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "2713:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EthDropEvent_$1035_storage_$",
              "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent)"
            },
            "typeName": {
              "id": 1039,
              "keyType": {
                "id": 1036,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2721:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2713:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EthDropEvent_$1035_storage_$",
                "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent)"
              },
              "valueType": {
                "id": 1038,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1037,
                  "name": "EthDropEvent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1035,
                  "src": "2729:12:6"
                },
                "referencedDeclaration": 1035,
                "src": "2729:12:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EthDropEvent_$1035_storage_ptr",
                  "typeString": "struct EthDropBase.EthDropEvent"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1046,
            "mutability": "mutable",
            "name": "pastEvents",
            "nameLocation": "2867:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "2835:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_EthDropEvent_$1035_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent[])"
            },
            "typeName": {
              "id": 1045,
              "keyType": {
                "id": 1041,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2843:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2835:31:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_EthDropEvent_$1035_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1043,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1042,
                    "name": "EthDropEvent",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1035,
                    "src": "2851:12:6"
                  },
                  "referencedDeclaration": 1035,
                  "src": "2851:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EthDropEvent_$1035_storage_ptr",
                    "typeString": "struct EthDropBase.EthDropEvent"
                  }
                },
                "id": 1044,
                "nodeType": "ArrayTypeName",
                "src": "2851:14:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_EthDropEvent_$1035_storage_$dyn_storage_ptr",
                  "typeString": "struct EthDropBase.EthDropEvent[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1052,
            "mutability": "mutable",
            "name": "admins",
            "nameLocation": "2988:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "2946:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1051,
              "keyType": {
                "id": 1047,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2954:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2946:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1050,
                "keyType": {
                  "id": 1048,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2970:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2962:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1049,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2981:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1058,
            "mutability": "mutable",
            "name": "contributors",
            "nameLocation": "3111:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3069:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1057,
              "keyType": {
                "id": 1053,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3077:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3069:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1056,
                "keyType": {
                  "id": 1054,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3093:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3085:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1055,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3104:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1064,
            "mutability": "mutable",
            "name": "eligibleRecipients",
            "nameLocation": "3246:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3204:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1063,
              "keyType": {
                "id": 1059,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3212:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3204:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1062,
                "keyType": {
                  "id": 1060,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3228:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3220:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1061,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3239:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1070,
            "mutability": "mutable",
            "name": "registeredRecipients",
            "nameLocation": "3389:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3347:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1069,
              "keyType": {
                "id": 1065,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3355:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3347:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1068,
                "keyType": {
                  "id": 1066,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3371:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3363:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1067,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3382:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1075,
            "mutability": "mutable",
            "name": "registeredRecipientsArray",
            "nameLocation": "3543:25:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3516:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 1074,
              "keyType": {
                "id": 1071,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3524:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3516:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1072,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3532:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1073,
                "nodeType": "ArrayTypeName",
                "src": "3532:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1080,
            "mutability": "mutable",
            "name": "pot",
            "nameLocation": "3656:3:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3623:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$294_$",
              "typeString": "mapping(uint256 => contract PaymentSplitter)"
            },
            "typeName": {
              "id": 1079,
              "keyType": {
                "id": 1076,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3631:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3623:32:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$294_$",
                "typeString": "mapping(uint256 => contract PaymentSplitter)"
              },
              "valueType": {
                "id": 1078,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1077,
                  "name": "PaymentSplitter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 294,
                  "src": "3639:15:6"
                },
                "referencedDeclaration": 294,
                "src": "3639:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PaymentSplitter_$294",
                  "typeString": "contract PaymentSplitter"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 1082,
        "src": "167:3496:6",
        "usedErrors": []
      }
    ],
    "src": "32:3631:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/core/EthDropBase.sol",
    "exportedSymbols": {
      "Address": [
        590
      ],
      "Context": [
        611
      ],
      "EthDropBase": [
        1081
      ],
      "ExecutivesAccessControl": [
        2036
      ],
      "PaymentSplitter": [
        294
      ],
      "SafeMath": [
        923
      ]
    },
    "id": 1082,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 985,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:6"
      },
      {
        "absolutePath": "project:/contracts/roles/ExecutivesAccessControl.sol",
        "file": "../roles/ExecutivesAccessControl.sol",
        "id": 986,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1082,
        "sourceUnit": 2037,
        "src": "57:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "file": "@openzeppelin/contracts/finance/PaymentSplitter.sol",
        "id": 987,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1082,
        "sourceUnit": 295,
        "src": "104:61:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 988,
              "name": "ExecutivesAccessControl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2036,
              "src": "191:23:6"
            },
            "id": 989,
            "nodeType": "InheritanceSpecifier",
            "src": "191:23:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1081,
        "linearizedBaseContracts": [
          1081,
          2036
        ],
        "name": "EthDropBase",
        "nameLocation": "176:11:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "243:103:6",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 992,
            "name": "RegistrationOpen",
            "nameLocation": "357:16:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "373:2:6"
            },
            "src": "351:25:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 993,
              "nodeType": "StructuredDocumentation",
              "src": "382:103:6",
              "text": "@dev The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
            },
            "id": 995,
            "name": "WinningsClaimingOpen",
            "nameLocation": "609:20:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "629:2:6"
            },
            "src": "603:29:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 996,
              "nodeType": "StructuredDocumentation",
              "src": "638:103:6",
              "text": "@dev The EventClose event is fired whenever an event closes. After this event is fired users can no"
            },
            "id": 998,
            "name": "EventClose",
            "nameLocation": "784:10:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 997,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "794:2:6"
            },
            "src": "778:19:6"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 999,
              "nodeType": "StructuredDocumentation",
              "src": "803:101:6",
              "text": "@dev Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred"
            },
            "id": 1005,
            "name": "Transfer",
            "nameLocation": "915:8:6",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1001,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "932:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "924:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1003,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "946:2:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1005,
                  "src": "938:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "923:26:6"
            },
            "src": "909:41:6"
          },
          {
            "canonicalName": "EthDropBase.EventState",
            "id": 1010,
            "members": [
              {
                "id": 1006,
                "name": "CREATED",
                "nameLocation": "1643:7:6",
                "nodeType": "EnumValue",
                "src": "1643:7:6"
              },
              {
                "id": 1007,
                "name": "REGISTRATION",
                "nameLocation": "1660:12:6",
                "nodeType": "EnumValue",
                "src": "1660:12:6"
              },
              {
                "id": 1008,
                "name": "CLAIM_WINNINGS",
                "nameLocation": "1682:14:6",
                "nodeType": "EnumValue",
                "src": "1682:14:6"
              },
              {
                "id": 1009,
                "name": "ENDED",
                "nameLocation": "1706:5:6",
                "nodeType": "EnumValue",
                "src": "1706:5:6"
              }
            ],
            "name": "EventState",
            "nameLocation": "1622:10:6",
            "nodeType": "EnumDefinition",
            "src": "1617:100:6"
          },
          {
            "constant": false,
            "id": 1013,
            "mutability": "mutable",
            "name": "devCutPercentage",
            "nameLocation": "1728:16:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "1723:25:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1011,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "1723:4:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "35",
              "id": 1012,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1747:1:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_5_by_1",
                "typeString": "int_const 5"
              },
              "value": "5"
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "EthDropBase.EthDropEvent",
            "id": 1035,
            "members": [
              {
                "constant": false,
                "id": 1015,
                "mutability": "mutable",
                "name": "groupId",
                "nameLocation": "1917:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "1912:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1014,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1912:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1018,
                "mutability": "mutable",
                "name": "currentState",
                "nameLocation": "2022:12:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2011:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_EventState_$1010",
                  "typeString": "enum EthDropBase.EventState"
                },
                "typeName": {
                  "id": 1017,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1016,
                    "name": "EventState",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1010,
                    "src": "2011:10:6"
                  },
                  "referencedDeclaration": 1010,
                  "src": "2011:10:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_EventState_$1010",
                    "typeString": "enum EthDropBase.EventState"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1020,
                "mutability": "mutable",
                "name": "startTime",
                "nameLocation": "2114:9:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2109:14:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1019,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2109:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1022,
                "mutability": "mutable",
                "name": "registrationEndTime",
                "nameLocation": "2218:19:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2213:24:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1021,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2213:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1024,
                "mutability": "mutable",
                "name": "endTime",
                "nameLocation": "2315:7:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2310:12:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1023,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2310:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1026,
                "mutability": "mutable",
                "name": "registeredRecipientsCount",
                "nameLocation": "2402:25:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2397:30:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1025,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "2397:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1028,
                "mutability": "mutable",
                "name": "sponsorName",
                "nameLocation": "2512:11:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2505:18:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1027,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2505:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1030,
                "mutability": "mutable",
                "name": "sponsorImageUrl",
                "nameLocation": "2540:15:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2533:22:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1029,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2533:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1032,
                "mutability": "mutable",
                "name": "sponsorLinkToUrl",
                "nameLocation": "2572:16:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2565:23:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 1031,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "2565:6:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1034,
                "mutability": "mutable",
                "name": "currentContributor",
                "nameLocation": "2606:18:6",
                "nodeType": "VariableDeclaration",
                "scope": 1035,
                "src": "2598:26:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1033,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2598:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "EthDropEvent",
            "nameLocation": "1762:12:6",
            "nodeType": "StructDefinition",
            "scope": 1081,
            "src": "1755:876:6",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1040,
            "mutability": "mutable",
            "name": "currentEvents",
            "nameLocation": "2743:13:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "2713:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EthDropEvent_$1035_storage_$",
              "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent)"
            },
            "typeName": {
              "id": 1039,
              "keyType": {
                "id": 1036,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2721:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2713:29:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_EthDropEvent_$1035_storage_$",
                "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent)"
              },
              "valueType": {
                "id": 1038,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1037,
                  "name": "EthDropEvent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1035,
                  "src": "2729:12:6"
                },
                "referencedDeclaration": 1035,
                "src": "2729:12:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_EthDropEvent_$1035_storage_ptr",
                  "typeString": "struct EthDropBase.EthDropEvent"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1046,
            "mutability": "mutable",
            "name": "pastEvents",
            "nameLocation": "2867:10:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "2835:42:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_EthDropEvent_$1035_storage_$dyn_storage_$",
              "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent[])"
            },
            "typeName": {
              "id": 1045,
              "keyType": {
                "id": 1041,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2843:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2835:31:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_EthDropEvent_$1035_storage_$dyn_storage_$",
                "typeString": "mapping(uint256 => struct EthDropBase.EthDropEvent[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1043,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 1042,
                    "name": "EthDropEvent",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1035,
                    "src": "2851:12:6"
                  },
                  "referencedDeclaration": 1035,
                  "src": "2851:12:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EthDropEvent_$1035_storage_ptr",
                    "typeString": "struct EthDropBase.EthDropEvent"
                  }
                },
                "id": 1044,
                "nodeType": "ArrayTypeName",
                "src": "2851:14:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_EthDropEvent_$1035_storage_$dyn_storage_ptr",
                  "typeString": "struct EthDropBase.EthDropEvent[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1052,
            "mutability": "mutable",
            "name": "admins",
            "nameLocation": "2988:6:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "2946:48:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1051,
              "keyType": {
                "id": 1047,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "2954:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2946:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1050,
                "keyType": {
                  "id": 1048,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2970:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2962:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1049,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2981:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1058,
            "mutability": "mutable",
            "name": "contributors",
            "nameLocation": "3111:12:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3069:54:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1057,
              "keyType": {
                "id": 1053,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3077:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3069:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1056,
                "keyType": {
                  "id": 1054,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3093:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3085:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1055,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3104:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1064,
            "mutability": "mutable",
            "name": "eligibleRecipients",
            "nameLocation": "3246:18:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3204:60:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1063,
              "keyType": {
                "id": 1059,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3212:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3204:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1062,
                "keyType": {
                  "id": 1060,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3228:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3220:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1061,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3239:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1070,
            "mutability": "mutable",
            "name": "registeredRecipients",
            "nameLocation": "3389:20:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3347:62:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(uint256 => mapping(address => bool))"
            },
            "typeName": {
              "id": 1069,
              "keyType": {
                "id": 1065,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3355:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3347:41:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(uint256 => mapping(address => bool))"
              },
              "valueType": {
                "id": 1068,
                "keyType": {
                  "id": 1066,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3371:7:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "3363:24:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1067,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "3382:4:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1075,
            "mutability": "mutable",
            "name": "registeredRecipientsArray",
            "nameLocation": "3543:25:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3516:52:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(uint256 => address[])"
            },
            "typeName": {
              "id": 1074,
              "keyType": {
                "id": 1071,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3524:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3516:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(uint256 => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 1072,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3532:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 1073,
                "nodeType": "ArrayTypeName",
                "src": "3532:9:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1080,
            "mutability": "mutable",
            "name": "pot",
            "nameLocation": "3656:3:6",
            "nodeType": "VariableDeclaration",
            "scope": 1081,
            "src": "3623:36:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$294_$",
              "typeString": "mapping(uint256 => contract PaymentSplitter)"
            },
            "typeName": {
              "id": 1079,
              "keyType": {
                "id": 1076,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "3631:4:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3623:32:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_contract$_PaymentSplitter_$294_$",
                "typeString": "mapping(uint256 => contract PaymentSplitter)"
              },
              "valueType": {
                "id": 1078,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 1077,
                  "name": "PaymentSplitter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 294,
                  "src": "3639:15:6"
                },
                "referencedDeclaration": 294,
                "src": "3639:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_PaymentSplitter_$294",
                  "typeString": "contract PaymentSplitter"
                }
              }
            },
            "visibility": "internal"
          }
        ],
        "scope": 1082,
        "src": "167:3496:6",
        "usedErrors": []
      }
    ],
    "src": "32:3631:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x075Ce23dA19dFE848E94A96f69F549cE6D481Ba4",
      "transactionHash": "0x324db62e873e24ee1eac8c1eb0410254d37a96b29e64b1100b2cc5a709c176d0"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-21T04:50:44.816Z",
  "devdoc": {
    "events": {
      "EventClose()": {
        "details": "The EventClose event is fired whenever an event closes. After this event is fired users can no"
      },
      "RegistrationOpen()": {
        "details": "The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
      },
      "Transfer(address,address)": {
        "details": "Transfer event as defined in current draft of ERC721. Emitted every some Eth is transferred"
      },
      "WinningsClaimingOpen()": {
        "details": "The RegistrationOpen event is fired whenever a new event starts and users can begin restering."
      }
    },
    "kind": "dev",
    "methods": {
      "pause()": {
        "details": "Called by any \"C-level\" role to pause the contract. Used only when  a bug or exploit is detected and we need to limit damage."
      },
      "setCEO(address)": {
        "details": "Assigns a new address to act as the CEO. Only available to the current CEO.",
        "params": {
          "_newCEO": "The address of the new CEO"
        }
      },
      "setCFO(address)": {
        "details": "Assigns a new address to act as the CFO. Only available to the current CEO.",
        "params": {
          "_newCFO": "The address of the new CFO"
        }
      },
      "setCOO(address)": {
        "details": "Assigns a new address to act as the COO. Only available to the current CEO.",
        "params": {
          "_newCOO": "The address of the new COO"
        }
      },
      "unpause()": {
        "details": "Unpauses the smart contract. Can only be called by the CEO, since  one reason we may pause the contract is when CFO or COO accounts are  compromised."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "unpause()": {
        "notice": "This is public rather than external so it can be called by  derived contracts."
      }
    },
    "version": 1
  }
}